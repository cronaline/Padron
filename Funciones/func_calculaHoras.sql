--INCOMPLETO
--NO FUNCIONA
CREATE OR REPLACE FUNCTION INSERTA_ASISTENCIA(
  IN V_ID_PERSONA INTEGER,
  IN V_FECHA_INICIO DATE,
  IN V_FECHA_FIN DATE
)
  RETURNS DOUBLE PRECISION AS
$$
DECLARE
    V_ID_PERSONA  ALIAS FOR $1;
    V_FECHA_INICIO ALIAS FOR $2;
    V_FECHA_FIN ALIAS FOR $3;
    R view_admin_asistencia%ROWTYPE;
    CURS SCROLL CURSOR (ID INTEGER, INICIO DATE, FIN DATE) IS
      SELECT TOTAL
      FROM view_admin_asistencia
      WHERE ID_PERSONA = ID
      AND DIA => INICIO
      AND DIA <= FIN;
    V_TOTAL DOUBLE PRECISION := 0;
    V_HORAS view_admin_asistencia%TOTAL;
BEGIN
  OPERN CURS(V_ID_PERSONA, V_FECHA_INICIO, V_FECHA_FIN);
  LOOP
    FETCH CURS INTO V_HORAS;
    EXIT WHEN NOT FOUND;
    V_TOTAL := V_TOTAL + TO_NUMBER(V_HORAS, '999');
  END LOOP;
  CLOSE CURS;
  RETURN V_TOTAL;
END;
$$
LANGUAGE plpgsql;

CREATE OR REPLACE FUNCTION FUNC_CALCULA_HORAS(
  IN V_ID_PERSONA INTEGER,
  IN V_FECHA_INICIO DATE,
  IN V_FECHA_FIN DATE
)
  RETURNS DOUBLE PRECISION AS
$$
DECLARE
    V_ID_PERSONA  ALIAS FOR $1;
    V_FECHA_INICIO ALIAS FOR $2;
    V_FECHA_FIN ALIAS FOR $3;
    CURS SCROLL CURSOR (ID INTEGER, INICIO DATE, FIN DATE) IS
      SELECT TOTAL
      FROM view_admin_asistencia
      WHERE ID_PERSONA = ID
      AND DIA >= INICIO
      AND DIA <= FIN;
    V_TOTAL TIME;
    V_HORAS VARCHAR(15);
BEGIN
  OPEN CURS(V_ID_PERSONA, V_FECHA_INICIO, V_FECHA_FIN);
  LOOP
    FETCH CURS INTO V_HORAS;
    EXIT WHEN NOT FOUND;
    V_TOTAL := V_TOTAL + TO_TIME(V_HORAS);
  END LOOP;
  CLOSE CURS;
  RETURN V_TOTAL;
END;
$$
LANGUAGE plpgsql;
